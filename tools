Toolchains
==========
-- includes a compiler, a linker, assembler as well as debugger
Example
-------
The GNU Assembler
*****************
-- Responsible for turning compiled C code 
$gcc -S hello.c

$as -o hello.o hello.s

$ld 

$gdb

Hex Editor
==========
https://www.sweetscape.com/010editor/


Network Forensic Tools
======================
1. TCPDUMP with the libpcap library
2. Wireshark
3. BRO
4. SNORT
5. NetworkMiner
7. SQUID PROXY
8. YARA 


File System Forensic
=====================
1. Sleuthkit 

http://wiki.sleuthkit.org/index.php?title=The_Sleuth_Kit_commands
https://possiblelossofprecision.net/?p=1216
https://github.com/sleuthkit/sleuthkit
Commands
=========

['mmcat', 'mmcli', 'mmd', 'mmls', 'mmount', 'mmove', 'mmstat']
['blkcalc', 'blkcat' ,'blkls' , 'blkstat']
['ils','icat', 'img_cat', 'img_stat' ,'jcat' ,'jls']
['fsstat', 'fcat', 'ffind', 'fls']
['tsk_recover', 'tsk_loaddb', 'tsk_gettimes', 'tsk_comparedir']
['sorter', 'sigfind']



2. MAC Robber

***************
afflib-dbg - Advanced Forensics Format Library (debug version)
afflib-tools - Advanced Forensics Format Library (utilities)
dc3dd - patched version of GNU dd with forensic features
dcfldd - enhanced version of dd for forensics and security
volatility - advanced memory forensics framework
volatility-tools - generate profiles to Volatility Framework
wipe - secure file deletion
xmount - tool to crossmount between multiple input and output harddisk images


***************

Memory Forensic
===============
1. Volatility 


Display All the running process in the image of the operating system.
1. # python vol.py -f os_image.vmem pslist
2. # python vol.py -f os_image.vmem | grep -i svchost
3. # python vol.py -f os_image.vmem pslist -p <pid> 
4. # python vol.py -f os_image.vmem dlllist -p <pid> : List the loaded modules including the executable. This
list is extracted from Process Environment Block (PEB) 

5. # python vol.py -f os_image.vmem ldrmodules -p <pid> : l









