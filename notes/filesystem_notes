[I Node]

$df : shows available space but while try to create file it shows no space available.
Step 1:View the I-node usage using following commands:
  $df -i
  or 
  $sudo tune2fs -l /dev/had2 | grep -i inode
  
  Solutions:
  1. Delete smaller files.
  2. If you are not allow to delete smaller files.
  2.1 Limit: The bad news: on the ext* filesystems, we cannot simply increase the inode limit on the existing volume.
  There are two options:
  2.1.1 If the disk is an LVM, increase the size of the volume.
  2.1.2. Backup and create a new filesystem, specifying a higher i-node limit. Using $sudo make2fs -N 
  
  
Btffs, XFS do not have this limitation. And ZFS doesn't use I-node.  
=====
1. Find I-node count for your accout.

$ find . | wc -l

2. I-node usage for sub-directory
clear;
echo "Detailed Inode usage: $(pwd)" ; 
for d in `find -maxdepth 1 -type d |cut -d\/ -f2 |grep -xv . |sort`; 
	do 
		c=$(find $d |wc -l) ; printf "$c\t\t- $d\n" ; 
	done ; 

printf "Total: \t\t$(find $(pwd) | wc -l)\n"


Mapping Files into Memory
=========================
Kernel provides an interface that allows an application to map a file into memory, meaning that there is a one-to-one
correspondence between a memory address and a word in the file.
The programmer can then access the file directly through memory, identically to any other chunk of memory-resident data
- it is even possible to allow writes to the memory region to transparently map back to the file on disk.

POSIX.1 standards and Linux implements -- the mmap() system call for mapping objects into memory. 
mmap() pertains to mapping files into memory to perform I/O.

mmap()
------
A call to mmap() asks the kernel to map <len> bytes of the object represented by the file descriptor <fd>, 
starting at <offset> bytes into the file, into memory. 
