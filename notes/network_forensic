
Network Forensic
================

1. Capture (packets are captured)
2. Identify (used certain filtering criterion such as IPs, MACs, Time etc)
3. Analyze 


Lecture1
========
1. Review fundamentals
   -- IP Address 
   -- Ports
   -- OSI Reference Model
   -- TCP/IP 
   
   -- IP, TCP, UDP 
      -- TCP Three-way connection 
      -- DNS (TCP is used when the response data size exceeds 512 bytes, or for tasks such as zone transfers)
      
Basic Understanding
===================

$ nmap 192.168.1.20 -D 8.8.8.8 -ttl 30

-D: Decoy scan, in above 8.8.8.8 as a decoy address. 
-ttl: To hard cord a TTL of 30 

The above command scan the address 192.168.1.20 with a decoy of 8.8.8.8, using a hard-coded TTL of 30.

On target if we dump using tcpdump in verbose mode (-v) option. 
target# tcpdump -i eth0 -v -nn 'host 8.8.8.8'

Parsing TTL fields with Scapy
=============================
- print the source IP address and TTL of incoming packets
- setup a function to sniff and pass each individual packet to the function testTTL(), which examines the packet 
for the IP layer, extracting the IP source address and TTL fields and print these fields to the screen.

 
      
      
Networking
==========

Network Byte Order
------------------
Bigest byte first 
E.g., 1234 


Name Server Lookups
-------------------


Network Client
--------------      
      


Network Server
--------------


Grabbing Banners
----------------


Simple HTTP Request
-------------------


Capturing Packets
-----------------



Reading Headers
---------------



Parsing PCAP Files
------------------


Creating RAW Packets With Scapy
-------------------------------

Communicating With SSL
----------------------


Talking To SMTP Servers
-----------------------


Talking to POP3 and IMAP Servers
--------------------------------


FTP
---



Multicasting
------------


UDP
---

Telnet Client
-------------      
