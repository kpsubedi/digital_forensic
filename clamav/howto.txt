Check requests module is installed or not
-----------------------------------------
$python3 -m requests

If not installed use the following command to install
$pip3 install requests


Make an API call
----------------
import requests

res = requests.get('https://clamav-ui.com/api/v1/auth')

print(res.text)
----------
Run the above script 
$ python3 sample.py

  File "/home/bruce/.local/lib/python3.7/site-packages/requests/adapters.py", line 517, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='clamav-ui.com', port=443): Max retries exceeded with url: /api/v1/auth (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1056)')))

Fix the SSL error with verify = False in requests.get() method
--------------------------------------------------------------
import requests

res = requests.get('https://clamav-ui.com/api/v1/auth', verify=False)

print(res.text)
---------------------
bruce@workstation:~$ python3 sol_oneofus.py 
/home/bruce/.local/lib/python3.7/site-packages/urllib3/connectionpool.py:1107: InsecureRequestWarning: Unverified HTTPS request is being made to host 'clamav-ui.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  InsecureRequestWarning,
{"status":"success","data":{"token":"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpcCI6IjE3Mi4xNy4wLjU3IiwiaG9zdG5hbWUiOiJjbGFtYXYtdWkuY29tIiwiaWF0IjoxNzYxODU3NDk3LCJleHAiOjE3NjE4NjEwOTcsImlzcyI6IkNsYW1BViJ9.iWgXRDMbxc_0Z7tOZDyOxFn4DgpQ4IyWquWZWms0a_1xO46gMKaoQcA3egEIMwaSH9L5BD2kUNKhmstH3_BVoQ"}}
----------------
Still there is a warning
Lets find out how to supress the warning as well.
-----------------------------
import requests
import urllib3

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

res = requests.get('https://clamav-ui.com/api/v1/auth', verify=False)

print(res.text)
-----------------
$ python3 sample.py
{"status":"success","data":{"token":"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpcCI6IjE3Mi4xNy4wLjU3IiwiaG9zdG5hbWUiOiJjbGFtYXYtdWkuY29tIiwiaWF0IjoxNzYxODU3Njg1LCJleHAiOjE3NjE4NjEyODUsImlzcyI6IkNsYW1BViJ9.uGxMpcVGP__YEv9mWc2VQfIRLS5y91ubzMSDKZssgnZjWQxZT8MP0WxKjl9pQ4IV5ZW4KVETi663YByk4Y35hw"}}

Using Bash
----------
curl -k https://clamav-ui.com/api/v1/auth

Option: -k: will supress the certificate validation.
------------
import requests
import urllib3

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

res = requests.get('https://clamav-ui.com/api/v1/auth', verify=False)

if res.status_code == 200:

    #print(res.text)
    auth_data = res.json()

    #print(f"Token: {auth_data['data']['token']}")
    user_jwt = auth_data['data']['token']
    #print(user_jwt)

    # Make a POST call to scan the file 
    
else:
    print(f"Error: {response.status_code}")
-------

==== MAKE A POST CALL =====
import requests
import urllib3

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

# Step 1: Get auth token
res = requests.get('https://clamav-ui.com/api/v1/auth', verify=False)

if res.status_code == 200:
    auth_data = res.json()
    user_jwt = auth_data['data']['token']
    #print(f"Token: {user_jwt}")
    # Step 2: Upload file
    headers = {"Authorization": user_jwt}
    #print(headers)
    try:
        with open("file1.exe", "rb") as f:
            files = {"file": ("file1.exe", f, "application/octet-stream")}
            print(files)

            resp = requests.post('https://clamav-ui.com/api/v1/scan',headers=headers,files=files,verify=False)
            print(f"Scan status: {resp.status_code}")
            print(resp.text)
            scan_result = resp.json()
    except Exception as e:
        print("Error sending the file via HTTP: {e}")
    #if scan_result['data']['files'][0]['infected'] == False:
        #print(scan_result['data']['files'][0]['md5'])
    #print(scan_result['data']['infected'])
else:
    print(f"Error fetching token: {res.status_code}")
    print(res.text)

=============
import requests
import urllib3

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

# Step 1: Get auth token
res = requests.get('https://clamav-ui.com/api/v1/auth', verify=False)

if res.status_code == 200:
    auth_data = res.json()
    user_jwt = auth_data['data']['token']
    #print(f"Token: {user_jwt}")
    # Step 2: Upload file
    headers = {"Authorization": user_jwt}
    #print(headers)
    try:
        with open("file1.exe", "rb") as f:
            files = {"file": ("file1.exe", f, "application/octet-stream")}
            #print(files)

            resp = requests.post('https://clamav-ui.com/api/v1/scan',headers=headers,files=files,verify=False)
            #print(f"Scan status: {resp.status_code}")
            #print(resp.text)
            scan_result = resp.json()
            #print(scan_result['data']['files'][0]['infected'])
            #print(scan_result['data']['files'])

            if scan_result['data']['files'][0]['infected'] == False:
                print(f"The MD5 of file is: {scan_result['data']['files'][0]['md5']}")
            else:
                pass
    except Exception as e:
        pass
        #print("Error sending the file via HTTP: {e}")
    #if scan_result['data']['files'][0]['infected'] == False:
        #print(scan_result['data']['files'][0]['md5'])
    #print(scan_result['data']['infected'])
else:
    print(f"Error fetching token: {res.status_code}")
    print(res.text)
================
import requests
import urllib3

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)


def scan_result(mal_file):
    # Step 1: Get auth token
    res = requests.get('https://clamav-ui.com/api/v1/auth', verify=False)

    if res.status_code == 200:
        auth_data = res.json()
        user_jwt = auth_data['data']['token']
        #print(f"Token: {user_jwt}")
        # Step 2: Upload file
        headers = {"Authorization": user_jwt}
        #print(headers)
        try:
            with open(mal_file, "rb") as f:
                files = {"file": (mal_file, f, "application/octet-stream")}
                #print(files)

                resp = requests.post('https://clamav-ui.com/api/v1/scan',headers=headers,files=files,verify=False)
                #print(f"Scan status: {resp.status_code}")
                #print(resp.text)
                scan_result = resp.json()
                #print(scan_result['data']['files'][0]['infected'])
                #print(scan_result['data']['files'])

                if scan_result['data']['files'][0]['infected'] == False:
                    print(f"The MD5 of file is: {scan_result['data']['files'][0]['md5']}")
                else:
                    pass
        except Exception as e:
            pass
        #print("Error sending the file via HTTP: {e}")
    #if scan_result['data']['files'][0]['infected'] == False:
        #print(scan_result['data']['files'][0]['md5'])
    #print(scan_result['data']['infected'])
    else:
        print(f"Error fetching token: {res.status_code}")
        print(res.text)


scan_result('file1.exe')

================
List files in the directory using Python
----
import os 

for (root,dirs,files) in os.walk('/home/bruce/Desktop/suspicious-files'):
    print(files)
----------
====FINAL SOLUTION====
import requests
import urllib3
import os

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)


def scan_result(mal_file):
    # Step 1: Get auth token
    res = requests.get('https://clamav-ui.com/api/v1/auth', verify=False)
    if res.status_code == 200:
        auth_data = res.json()
        user_jwt = auth_data['data']['token']
        #print(f"Token: {user_jwt}")
        # Step 2: Upload file
        headers = {"Authorization": user_jwt}
        #print(headers)
        try:
            with open(mal_file, "rb") as f:
                files = {"file": (mal_file, f, "application/octet-stream")}
                #print(files)
                resp = requests.post('https://clamav-ui.com/api/v1/scan',headers=headers,files=files,verify=False)
                #print(f"Scan status: {resp.status_code}")
                #print(resp.text)
                scan_result = resp.json()
                #print(scan_result['data']['files'][0]['infected'])
                #print(scan_result['data']['files'])
                if scan_result['data']['files'][0]['infected'] != False:
                    print(f"The MD5 of the malicious file is: {scan_result['data']['files'][0]['md5']}")
                else:
                    pass
        except Exception as e:
            pass

    else:
        print(f"Error fetching token: {res.status_code}")
        print(res.text)


def runscan():
    allfiles = []

    for (root, dirs, files) in os.walk('/home/bruce/Desktop/suspicious-files'):
        for file in files:
            allfiles.append(root+'/'+file)

    for s_file in allfiles:
        #print(s_file)
        scan_result(s_file)


runscan()
